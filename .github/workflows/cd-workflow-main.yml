name: Deploy EC2 - AWS
on:
  push:
    branches:
      - main
    paths:
      - 'reset-password-api/**'
jobs:

  deploy:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Configurar variáveis de ambiente
      run: |
        echo "DB_URL=${{ secrets.DB_URL }}" >> $GITHUB_ENV
        echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> $GITHUB_ENV
        echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV
        echo "SPRING_MAIL_USERNAME=${{ secrets.SPRING_MAIL_USERNAME }}" >> $GITHUB_ENV
        echo "SPRING_MAIL_PASSWORD=${{ secrets.SPRING_MAIL_PASSWORD }}" >> $GITHUB_ENV

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'zulu'

    - name: Build with Maven
      run: mvn clean package
      working-directory: reset-password-api

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker image
      uses: docker/build-push-action@v2
      with:
        context: reset-password-api
        push: true
        tags: alissonlimabr/repository-apps:latest

    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER}}
        key: ${{ secrets.PRIVATE_KEY }}
        script: |
          # Fazer login no Docker Hub sem enviar as credenciais para o GitHub Actions
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

          # Puxar a imagem do Docker Hub
          docker pull alissonlimabr/repository-apps:latest

          # Parar o contêiner Docker existente
          docker stop reset-password-api || true
          docker rm reset-password-api || true

          # Executar o contêiner Docker
          docker run -d -p ${{ secrets.SERVER_PORT}}:8080 \
          -e SSL_PASSWORD=${{ secrets.SSL_PASSWORD }} \
          -e DB_URL=${{ secrets.DB_URL }} \
          -e DB_USERNAME=${{ secrets.DB_USERNAME }} \
          -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
          -e SPRING_MAIL_USERNAME=${{ secrets.SPRING_MAIL_USERNAME }} \
          -e SPRING_MAIL_PASSWORD=${{ secrets.SPRING_MAIL_PASSWORD }} \
          --name reset-password-api alissonlimabr/repository-apps:latest
